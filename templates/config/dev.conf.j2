{%- import '_macros.j2' as macros with context -%}

{% set config = elao_supervisor_config -%}

{% set config_unix_http_server = [] -%}
{% set config_supervisord = [] -%}
{% set config_supervisorctl = [] -%}
{% set config_include = [] -%}

{%- for configs in config -%}
    {%- for config_name, config_parameters in configs.iteritems() -%}
        {%- if config_name == 'unix_http_server' -%}
            {%- if config_unix_http_server.extend(config_parameters) -%}{%- endif -%}
        {%- elif config_name == 'supervisord' -%}
            {%- if config_supervisord.extend(config_parameters) -%}{%- endif -%}
        {%- elif config_name == 'supervisorctl' -%}
            {%- if config_supervisorctl.extend(config_parameters) -%}{%- endif -%}
        {%- elif config_name == 'include' -%}
            {%- if config_include.extend(config_parameters) -%}{%- endif -%}
        {%- endif -%}
    {%- endfor -%}
{%- endfor -%}

; supervisor config file
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
{{ macros.config_row(config_unix_http_server, 'file', '/var/run/supervisor.sock') }} ; (the path to the socket file)
{{ macros.config_row(config_unix_http_server, 'chmod', ';chmod=0700', 0, true) }} ; socket file mode (default 0700)
{{ macros.config_row(config_unix_http_server, 'chown', ';chown=nobody:nogroup', 0, true) }} ; socket file uid:gid owner
{{ macros.config_row(config_unix_http_server, 'username', ';username=user', 0, true) }} ; (default is no username (open server))
{{ macros.config_row(config_unix_http_server, 'password', ';password=123', 0, true) }} ; (default is no password (open server))
{{ macros.config(config_unix_http_server, [
    'file',
    'chmod',
    'chown',
    'username',
    'password'
]) }}

[supervisord]
{{ macros.config_row(config_supervisord, 'logfile', elao_supervisor_log_dir ~ '/supervisord.log') }} ; (main log file;default $CWD/supervisord.log)
{{ macros.config_row(config_supervisord, 'logfile_maxbytes', '50MB') }} ; (max main logfile bytes b4 rotation;default 50MB)
{{ macros.config_row(config_supervisord, 'logfile_backups', '10') }} ; (num of main logfile rotation backups;default 10)
{{ macros.config_row(config_supervisord, 'loglevel', 'info') }} ; (log level;default info; others: debug,warn,trace)
{{ macros.config_row(config_supervisord, 'pidfile', '/var/run/supervisord.pid') }} ; (supervisord pidfile;default supervisord.pid)
{{ macros.config_row(config_supervisord, 'nodaemon', 'false') }} ; (start in foreground if true;default false)
{{ macros.config_row(config_supervisord, 'minfds', '1024') }} ; (min. avail startup file descriptors;default 1024)
{{ macros.config_row(config_supervisord, 'minprocs', '200') }} ; (min. avail process descriptors;default 200)
{{ macros.config_row(config_supervisord, 'umask', ';umask=022', 0, true) }} ; (process file creation umask;default 022)
{{ macros.config_row(config_supervisord, 'user', ';user=chrism', 0, true) }} ; (default is current user, required if root)
{{ macros.config_row(config_supervisord, 'identifier', ';identifier=supervisor', 0, true) }} ; (supervisord identifier, default is 'supervisor')
{{ macros.config_row(config_supervisord, 'directory', ';directory=/tmp', 0, true) }} ; (default is not to cd during start)
{{ macros.config_row(config_supervisord, 'nocleanup', ';nocleanup=true', 0, true) }} ; (don't clean up tempfiles at start;default false)
{{ macros.config_row(config_supervisord, 'childlogdir', elao_supervisor_log_dir) }} ; ('AUTO' child log dir, default $TEMP)
{{ macros.config_row(config_supervisord, 'environment', ';environment=KEY="value"', 0, true) }} ; (key value pairs to add to environment)
{{ macros.config_row(config_supervisord, 'strip_ansi', ';strip_ansi=false', 0, true) }} ; (strip ansi escape codes in logs; def. false)
{{ macros.config(config_supervisord, [
    'logfile',
    'logfile_maxbytes',
    'logfile_backups',
    'loglevel',
    'pidfile',
    'nodaemon',
    'minfds',
    'minprocs',
    'umask',
    'user',
    'identifier',
    'directory',
    'nocleanup',
    'childlogdir',
    'environment',
    'strip_ansi'
]) }}

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
{{ macros.config_row(config_supervisorctl, 'serverurl', 'unix:///var/run//supervisor.sock') }} ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
{{ macros.config_row(config_supervisorctl, 'username', ';username=chris', 0, true) }} ; should be same as http_username if set
{{ macros.config_row(config_supervisorctl, 'password', ';password=123', 0, true) }} ; should be same as http_password if set
{{ macros.config_row(config_supervisorctl, 'prompt', ';prompt=mysupervisor', 0, true) }} ; cmd line prompt (default "supervisor")
{{ macros.config_row(config_supervisorctl, 'history_file', ';history_file=~/.sc_history', 0, true) }} ; use readline history if available
{{ macros.config(config_supervisorctl, [
    'serverurl',
    'username',
    'password',
    'prompt',
    'history_file'
]) }}

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

[include]
{{ macros.config_row(config_include, 'files', elao_supervisor_configs_dir ~ '/*.conf') }}
{{ macros.config(config_include, ['files']) }}

{{ macros.config(config, ['unix_http_server', 'supervisord', 'config_supervisorctl', 'include']) }}
